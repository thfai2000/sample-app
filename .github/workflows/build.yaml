name: Build and Publish Artifact

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  VERSION_MAJOR: 1
  VERSION_MINOR: 0
  VERSION_SNAPSHOT_FILENAME: sample-app
  SNAPSHOT_NAME_PREFIX: Winter23_S15B1

jobs:

  build-deploy:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ contains(steps.folder_changes.outputs.changed, 'deploy/') }}
      artifact-url: ${{ steps.publish_artifact_deploy.outputs.artifact-url }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # - name: Get Previous Version
      #   id: get_version
      #   run: echo "::set-output name=version::$(git describe --tags --abbrev=0 || echo 'v0.0.0')"

      # - name: Increment Version
      #   id: increment_version
      #   run: echo "::set-output name=version::$(echo "${{ steps.get_version.outputs.version }}" | awk -F. -v OFS=. '{++$NF;print $0}')"

      - name: Check Folder Changes
        id: folder_changes
        run: echo "::set-output name=changed::$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }})"
      - name: Publish Artifact - Deploy
        uses: actions/upload-artifact@v2
        if: ${{ contains(steps.folder_changes.outputs.changed, 'deploy/') }}
        with:
          name: deploy-$VERSION_MAJOR.$VERSION_MINOR.${{ github.run_id }}
          path: deploy
          retention-days: 300

  build-web1:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ contains(steps.folder_changes.outputs.changed, 'web1/') }}
      artifact-url: ${{ steps.publish_artifact_web1.outputs.artifact-url }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Check Folder Changes
        id: folder_changes
        run: echo "::set-output name=changed::$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }})"

      - name: Publish Artifact - Web1
        id: publish_artifact_web1
        uses: actions/upload-artifact@v2
        if: ${{ contains(steps.folder_changes.outputs.changed, 'web1/') }}
        with:
          name: web1-$VERSION_MAJOR.$VERSION_MINOR.${{ github.run_id }}
          path: web1
          retention-days: 300

  build-web2:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ contains(steps.folder_changes.outputs.changed, 'web2/') }}
      artifact-url: ${{ steps.publish_artifact_web2.outputs.artifact-url }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Check Folder Changes
        id: folder_changes
        run: echo "::set-output name=changed::$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }})"

      - name: Publish Artifact - Web2
        id: publish_artifact_web2
        uses: actions/upload-artifact@v2
        if: ${{ contains(steps.folder_changes.outputs.changed, 'web2/') }}
        with:
          name: web2-$VERSION_MAJOR.$VERSION_MINOR.${{ github.run_id }}
          path: web2
          retention-days: 300

  build-web3:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ contains(steps.folder_changes.outputs.changed, 'web3/') }}
      artifact-url: ${{ steps.publish_artifact_web3.outputs.artifact-url }}
      
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Check Folder Changes
        id: folder_changes
        run: echo "::set-output name=changed::$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }})"

      - name: Publish Artifact - Web3
        id: publish_artifact_web3
        uses: actions/upload-artifact@v2
        if: ${{ contains(steps.folder_changes.outputs.changed, 'web3/') }}
        with:
          name: web3-$VERSION_MAJOR.$VERSION_MINOR.${{ github.run_id }}
          path: web3
          retention-days: 300

  create-snapshot:
    runs-on: ubuntu-latest
    # if: ${{ always() }}
    needs: [build-deploy, build-web1, build-web2, build-web3]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: thfai2000/version_snapshots
          path: versions

      - name: Create Versions Snapshot
        run: |

          # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
          cd versions
          git config user.name github-actions
          git config user.email github-actions@github.com

          if [[ ${{ needs.build-deploy.outputs.new_version }} ]]; then
            ./utils/update_latest_snapshot.sh $VERSION_SNAPSHOT_FILENAME deploy deploy-$VERSION_MAJOR.$VERSION_MINOR.${{ github.run_id }} ${{ steps.publish_artifact_deploy.outputs.artifact-url }}
          fi
          if [[ ${{ needs.build-web1.outputs.new_version }} ]]; then
            ./utils/update_latest_snapshot.sh $VERSION_SNAPSHOT_FILENAME web1 web1-$VERSION_MAJOR.$VERSION_MINOR.${{ github.run_id }} ${{ steps.publish_artifact_web1.outputs.artifact-url }}
          fi
          if [[ ${{ needs.build-web2.outputs.new_version }} ]]; then
            ./utils/update_latest_snapshot.sh $VERSION_SNAPSHOT_FILENAME web2 web2-$VERSION_MAJOR.$VERSION_MINOR.${{ github.run_id }} ${{ steps.publish_artifact_web2.outputs.artifact-url }}
          fi
          if [[ ${{ needs.build-web3.outputs.new_version }} ]]; then
            ./utils/update_latest_snapshot.sh $VERSION_SNAPSHOT_FILENAME web3 web3-$VERSION_MAJOR.$VERSION_MINOR.${{ github.run_id }} ${{ steps.publish_artifact_web3.outputs.artifact-url }}
          fi

          ./utils/create_snapshot.sh $VERSION_SNAPSHOT_FILENAME ${SNAPSHOT_NAME_PREFIX}
          git add .
          git commit -m "Create/Update Snapshot ${SNAPSHOT_NAME_PREFIX}"
          git push
        
      # - name: Trigger Ansible Tower Job
      #   run: |
      #     curl -X POST -H "Content-Type: application/json" \
      #     -u USERNAME:PASSWORD \
      #     -d '{"extra_vars": {"artifact": "my-artifact"}}' \
      #     https://ansible-tower/api/v2/job_templates/123/launch/